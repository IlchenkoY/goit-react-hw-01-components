{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/App/App.module.css","components/Profile/Profile.jsx","components/Statistic/StatisticList.jsx","components/Statistic/randomColor.js","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","followers","views","likes","className","s","profile","description","src","alt","stats","statsItem","label","quantity","Statistic","title","section","statList","map","percentage","id","item","style","backgroundColor","Math","floor","random","toString","FriendListItem","isOnline","online","offline","width","FriendList","friends","list","listItem","TransactionHistory","items","table","type","amount","currency","App","container","user","statistic","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.748f25c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3kfD_\",\"description\":\"Profile_description__3LB5H\",\"avatar\":\"Profile_avatar__RjQFU\",\"name\":\"Profile_name__1Ws1L\",\"tag\":\"Profile_tag__25__4\",\"location\":\"Profile_location__3ytJA\",\"stats\":\"Profile_stats__hs1Px\",\"statsItem\":\"Profile_statsItem__lBbAD\",\"label\":\"Profile_label__1z8Z0\",\"quantity\":\"Profile_quantity__2lchM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistic_section__1aVNW\",\"title\":\"Statistic_title__1ytqq\",\"statList\":\"Statistic_statList__2OWL_\",\"item\":\"Statistic_item__3Lo01\",\"label\":\"Statistic_label__2comm\",\"percentage\":\"Statistic_percentage__3mjHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__1rf7v\",\"online\":\"FriendListItem_online__2eQUx FriendListItem_status__1rf7v\",\"offline\":\"FriendListItem_offline__2wHXJ FriendListItem_status__1rf7v\",\"name\":\"FriendListItem_name__2SGSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__mLZ6H\",\"listItem\":\"FriendList_listItem__2vUxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3icKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jlAW\"};","import PropTypes from 'prop-types';\r\nimport s from \"./Profile.module.css\";\r\n\r\n\r\nexport default function Profile({\r\n  avatar,\r\n  name,\r\n  tag,\r\n  location,\r\n  followers,\r\n  views,\r\n  likes\r\n}) {\r\n    return(\r\n  <div className={s.profile}>\r\n  <div className={s.description}>\r\n    <img\r\n      src={avatar}\r\n      alt=\"Аватар пользователя\"\r\n      className={s.avatar}\r\n    />\r\n    <p className={s.name}>{name}</p>\r\n    <p className={s.tag}>@ {tag}</p>\r\n    <p className={s.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={s.stats}>\r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Followers </span>\r\n      <span className={s.quantity}>{followers}</span>\r\n    </li>\r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Views </span>\r\n      <span className={s.quantity}>{views}</span>\r\n    </li>\r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Likes </span>\r\n      <span className={s.quantity}>{likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n);\r\n}\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport getRandomColor from './randomColor'\r\nimport s from './Statistic.module.css';\r\n\r\nexport default function Statistic({ title, stats }) {\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(({ label, percentage, id }) => (\r\n          <li className={s.item} key={id}\r\n            style={{backgroundColor: getRandomColor()}}\r\n          >\r\n            <span className={s.label}>{label} </span>\r\n            <span className={s.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number, \r\n      id: PropTypes.string.isRequired,\r\n  })\r\n  ),\r\n}","export default function getRandomColor() {\r\n    const randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n    \r\n    return randomColor;\r\n  }","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\n\r\nexport default function FriendListItem({ avatar, name, isOnline }) {\r\n    return (\r\n        <>\r\n            <span className={isOnline ? s.online : s.offline}></span>\r\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem/FriendListItem'\r\nimport s from './FriendList.module.css';\r\n\r\nexport default function FriendList({ friends }) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {friends.map(({ avatar, name, isOnline, id }) => (\r\n                <li className={s.listItem} key={id}>\r\n                    <FriendListItem\r\n                        avatar={avatar}\r\n                        name={name}\r\n                        isOnline={isOnline}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n   ) \r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n  }),\r\n  ),\r\n}","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\n\r\nexport default function TransactionHistory({ items }) {\r\n    \r\n    return (\r\n        <table className={s.table}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(({id, type, amount, currency}) => (\r\n                    <tr key={id}>\r\n                        <td>{type}</td>\r\n                        <td>{amount}</td>\r\n                        <td>{currency}</td>\r\n                    </tr>\r\n                ))}  \r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};","import Profile from '../Profile/Profile';\r\nimport Statistics from '../Statistic/StatisticList';\r\nimport FriendList from '../FriendList/FriendList';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport s from './App.module.css'\r\nimport user from '../../data/user.json';\r\nimport statistic from '../../data/statistical-data.json';\r\nimport friends from '../../data/friends.json';\r\nimport transactions from '../../data/transactions.json';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className={s.container}>\r\n         <Profile\r\n            avatar={user.avatar}\r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            followers={user.stats.followers}\r\n            views={user.stats.views}\r\n            likes={user.stats.likes}\r\n        />\r\n            <Statistics title=\"Upload Stats\" stats={statistic} />\r\n            <FriendList friends={friends} />\r\n            <TransactionHistory items={transactions} />\r\n        </div>\r\n        \r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\n// import PropTypes from 'prop-types';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}